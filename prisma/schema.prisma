// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? //@db.Text
  access_token      String? //@db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? //@db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id        String    @id @default(cuid())
  email     String
  fname     String    @db.VarChar(30)
  lname     String    @db.VarChar(30)
  createdAt DateTime  @default(now())
  updatedAt DateTime
  Account   Account[]
  Session   Session[]
  Habit     Habit[]
  provider  String    @default("github")
}

model Habit {
  id          String         @id @default(cuid())
  User        User           @relation(fields: [userId], references: [id])
  userId      String
  History     HabitHistory[]
  name        String         @db.VarChar(30)
  description String
  cue         String
  craving     String
  response    String
  reward      String
  stock       Float          @default(10)
  status      String         @default("_")
  type        String         @default("daily")
  createdAt   DateTime       @default(now())
  updatedAt   DateTime
  stashed     Boolean        @default(false)
}

model HabitHistory {
  id      String   @id @default(cuid())
  Habit   Habit    @relation(fields: [habitId], references: [id])
  habitId String
  date    DateTime @default(now())
  stock   Float    @default(10)
  status  String
}
